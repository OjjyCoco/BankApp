// <auto-generated />
using System;
using Bank.Datas;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bank.Datas.Migrations
{
    [DbContext(typeof(BankDbContext))]
    partial class BankDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bank.Datas.Entities.CarteBancaire", b =>
                {
                    b.Property<string>("NumCarte")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateExpiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumCompte")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("NumCarte");

                    b.HasIndex("NumCarte")
                        .IsUnique();

                    b.HasIndex("NumCompte");

                    b.ToTable("CarteBancaires", (string)null);

                    b.HasData(
                        new
                        {
                            NumCarte = "4974018502231018",
                            DateExpiration = new DateTime(2030, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumCompte = "151DZ247Z"
                        },
                        new
                        {
                            NumCarte = "4974018502231034",
                            DateExpiration = new DateTime(2027, 6, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumCompte = "354SE553A"
                        },
                        new
                        {
                            NumCarte = "4974018502231000",
                            DateExpiration = new DateTime(2028, 3, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumCompte = "354SE553A"
                        });
                });

            modelBuilder.Entity("Bank.Datas.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodePostal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Bank.Datas.Entities.CompteBancaire", b =>
                {
                    b.Property<string>("NumCompte")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOuverture")
                        .HasColumnType("datetime2");

                    b.Property<double>("Solde")
                        .HasColumnType("float");

                    b.HasKey("NumCompte");

                    b.HasIndex("ClientId");

                    b.HasIndex("NumCompte")
                        .IsUnique();

                    b.ToTable("CompteBancaires", (string)null);

                    b.HasData(
                        new
                        {
                            NumCompte = "151DZ247Z",
                            ClientId = 1,
                            DateOuverture = new DateTime(2005, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Solde = 25680.5
                        },
                        new
                        {
                            NumCompte = "354SE553A",
                            ClientId = 2,
                            DateOuverture = new DateTime(1989, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Solde = 725621684.60000002
                        });
                });

            modelBuilder.Entity("Bank.Datas.Entities.Utilisateur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Utilisateurs", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 2,
                            Login = "Axa",
                            Password = "test"
                        });
                });

            modelBuilder.Entity("Operation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("Montant")
                        .HasColumnType("float");

                    b.Property<string>("NumCarte")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumCompte")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("NumCompte");

                    b.ToTable("Operations", (string)null);
                });

            modelBuilder.Entity("Bank.Datas.Entities.ClientPart", b =>
                {
                    b.HasBaseType("Bank.Datas.Entities.Client");

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sexe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("ClientsPart", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adresse = "12, rue des Oliviers",
                            CodePostal = "94000",
                            Complement = "",
                            Mail = "bety@gmail.com",
                            Nom = "BETY",
                            Ville = "CRETEIL",
                            DateNaissance = new DateTime(1985, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Prenom = "Daniel",
                            Sexe = "M"
                        },
                        new
                        {
                            Id = 3,
                            Adresse = "10, rue des Olivies",
                            CodePostal = "94300",
                            Complement = "Etage 2",
                            Mail = "bodin@gmail.com",
                            Nom = "BODIN",
                            Ville = "VIENCENNES",
                            DateNaissance = new DateTime(1965, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Prenom = "Justin",
                            Sexe = "M"
                        },
                        new
                        {
                            Id = 5,
                            Adresse = "15, rue de la République",
                            CodePostal = "94120",
                            Complement = "",
                            Mail = "berris@gmail.com",
                            Nom = "BERRIS",
                            Ville = "FONTENAY SOUS BOIS",
                            DateNaissance = new DateTime(1977, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Prenom = "Karine",
                            Sexe = "F"
                        },
                        new
                        {
                            Id = 7,
                            Adresse = "25, rue de la Paix",
                            CodePostal = "92100",
                            Complement = "",
                            Mail = "abenir@gmail.com",
                            Nom = "ABENIR",
                            Ville = "LA DEFENSE",
                            DateNaissance = new DateTime(1977, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Prenom = "Alexandra",
                            Sexe = "F"
                        },
                        new
                        {
                            Id = 9,
                            Adresse = "3, avenue des Parcs",
                            CodePostal = "93500",
                            Complement = "",
                            Mail = "bensaid@gmail.com",
                            Nom = "BENSAID",
                            Ville = "ROISSY EN France",
                            DateNaissance = new DateTime(1976, 4, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Prenom = "Georgia",
                            Sexe = "F"
                        },
                        new
                        {
                            Id = 11,
                            Adresse = "3, rue Lecourbe",
                            CodePostal = "93200",
                            Complement = "",
                            Mail = "ababou@gmail.com",
                            Nom = "ABABOU",
                            Ville = "BAGNOLET",
                            DateNaissance = new DateTime(1970, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Prenom = "Teddy",
                            Sexe = "M"
                        });
                });

            modelBuilder.Entity("Bank.Datas.Entities.ClientPro", b =>
                {
                    b.HasBaseType("Bank.Datas.Entities.Client");

                    b.Property<string>("AdresseSiege")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodePostalSiege")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComplementSiege")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Siret")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("StatutJuridique")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VilleSiege")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("ClientsPro", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Adresse = "125, rue LaFayette",
                            CodePostal = "94120",
                            Complement = "Digicode 1432",
                            Mail = "info@axa.fr",
                            Nom = "AXA",
                            Ville = "FONTENAY SOUS BOIS",
                            AdresseSiege = "125, rue LaFayette",
                            CodePostalSiege = "94120",
                            ComplementSiege = "Digicode 1432",
                            Siret = "12548795641122",
                            StatutJuridique = "SARL",
                            VilleSiege = "FONTENAY SOUS BOIS"
                        },
                        new
                        {
                            Id = 4,
                            Adresse = "36, quai des Orfèvres",
                            CodePostal = "93500",
                            Complement = "",
                            Mail = "info@paul.fr",
                            Nom = "PAUL",
                            Ville = "ROISSY FRANCE",
                            AdresseSiege = "10, esplanade de la défense",
                            CodePostalSiege = "92060",
                            ComplementSiege = "",
                            Siret = "87459564455444",
                            StatutJuridique = "EURL",
                            VilleSiege = "LA DEFENSE"
                        },
                        new
                        {
                            Id = 6,
                            Adresse = "32, rue E.Renan",
                            CodePostal = "75002",
                            Complement = "Bat. C",
                            Mail = "contact@primark.fr",
                            Nom = "PRIMARK",
                            Ville = "PARIS",
                            AdresseSiege = "32, rue E.Renan",
                            CodePostalSiege = "75002",
                            ComplementSiege = "Bat. C",
                            Siret = "08755897458455",
                            StatutJuridique = "SARL",
                            VilleSiege = "PARIS"
                        },
                        new
                        {
                            Id = 8,
                            Adresse = "23, av P.Valery",
                            CodePostal = "92100",
                            Complement = "",
                            Mail = "info@zara.fr",
                            Nom = "ZARA",
                            Ville = "LA DEFENSE",
                            AdresseSiege = "24, esplanade de la Défense",
                            CodePostalSiege = "92060",
                            ComplementSiege = "Tour Franklin",
                            Siret = "65895874587854",
                            StatutJuridique = "SA",
                            VilleSiege = "LA DEFENSE"
                        },
                        new
                        {
                            Id = 10,
                            Adresse = "15, Place de la Bastille",
                            CodePostal = "75003",
                            Complement = "Fond de Cour",
                            Mail = "contact@leonidas.fr",
                            Nom = "LEONIDAS",
                            Ville = "PARIS",
                            AdresseSiege = "10, rue de la Paix",
                            CodePostalSiege = "75008",
                            ComplementSiege = "Tour Franklin",
                            Siret = "91235987456832",
                            StatutJuridique = "SAS",
                            VilleSiege = "PARIS"
                        });
                });

            modelBuilder.Entity("Bank.Datas.Entities.CarteBancaire", b =>
                {
                    b.HasOne("Bank.Datas.Entities.CompteBancaire", "CompteBancaire")
                        .WithMany()
                        .HasForeignKey("NumCompte")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompteBancaire");
                });

            modelBuilder.Entity("Bank.Datas.Entities.CompteBancaire", b =>
                {
                    b.HasOne("Bank.Datas.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Bank.Datas.Entities.Utilisateur", b =>
                {
                    b.HasOne("Bank.Datas.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Operation", b =>
                {
                    b.HasOne("Bank.Datas.Entities.CompteBancaire", "CompteBancaire")
                        .WithMany()
                        .HasForeignKey("NumCompte")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompteBancaire");
                });

            modelBuilder.Entity("Bank.Datas.Entities.ClientPart", b =>
                {
                    b.HasOne("Bank.Datas.Entities.Client", null)
                        .WithOne()
                        .HasForeignKey("Bank.Datas.Entities.ClientPart", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bank.Datas.Entities.ClientPro", b =>
                {
                    b.HasOne("Bank.Datas.Entities.Client", null)
                        .WithOne()
                        .HasForeignKey("Bank.Datas.Entities.ClientPro", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
